#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>
int language;
struct Transaction
{
	char username [100];
	time_t timestamp;
	int type;
	int amount;
	struct Transaction * next;
};
typedef struct Transaction transaction;
Transaction * thead=NULL;
Transaction * tTail=NULL;
struct Account
{
	char name[100];
	char Carid[50];
	char username[100];
	char password[100];
	int money;
	struct Account *next;
};
typedef struct Account Account;
Account * head=NULL;
Account * tail=NULL;
Account * curAccount=NULL;
int findAccount(Account a)
{
	Account *curP=head;
	while(curP!=NULL)
	{
		if((strcmp(curP->username,a.username)==0)&&(strcmp(curP->password,a.password)==0))
		{
			curAccount=curP;
			return 1;
		}
		curP=curP->next; 
	}
	return 0;
}
 void updatePassword()
 {
 	printf("请输入旧密码：\n");
 	char oldPssword[100]={'\0'};
 	scanf("%s",updatePassword);
 	if(strcmp(oldPassword,curAccount->password)==0)
 	{
 		printf("请输入新密码:\n");
 		scanf("%s",curAccount->password);
 		printf("修改成功！\n") ;
	 }
	 else
	 {
	 	printf("旧密码输入错误，拒绝修改！\n");
	 }
	 
  } 
  void drawMoney()
  {
  	printf("请输入取款金额: ");
  	int money;
  	scanf("%d",&money);
  	if(curAccount->money>=money)
  	{
  		curAccount->money-=money;
		printf("取款成功！\n");
		Transaction * newNode=(Transaction *)malloc(sizeof(Transaction));
		newNode->next=NULL;
		strcpy(newNode->username,curAccount->username);
		newNode->timestamp=time(NULL);
		 newNode->type=1;
		 newNode->amount=money;
		 if(tHead==NULL) 
		 {
		 tHead=newNode;
		 tTail=newNode;
	     }
	     else
	     {
	     	tTail->next=newNode;
	     	tTail=newNode;
		 }
	}
		 else
		 {
		 	printf("余额不足！\n");
		 } 
  }
